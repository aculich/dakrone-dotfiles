# -*- mode: snippet -*-
#name : shellorg
# --
#+TITLE:   ${1:<title>}
#+AUTHOR:  `(user-full-name)`
#+EMAIL:   `user-mail-address`
#+LANGUAGE: en
#+PROPERTY: header-args :results code replace :exports both :noweb yes :tangle no
#+HTML_HEAD: <link rel="stylesheet" href="http://dakrone.github.io/org.css" type="text/css" />
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+OPTIONS: H:4 num:nil toc:t \n:nil @:t ::t |:t ^:{} -:t f:t *:t
#+OPTIONS: skip:nil d:(HIDE) tags:not-in-toc
#+TODO: TODO(t) | DONE(d)
#+TODO: TODO(t) SOMEDAY(s) INPROGRESS(i) HOLD(h) WAITING(w@/!) NEEDSREVIEW(n@/!) | DONE(d)
#+TODO: TODO(t) INPROGRESS(i) | CANCELLED(c@/!)
#+TAGS: export(e) noexport(n)
#+STARTUP: fold nodlcheck lognotestate content

* Create the index

#+BEGIN_SRC es :tangle yes
DELETE /${2:thing}
{}

POST /$2
{
  "settings": {
    "number_of_shards": 1,
    "number_of_replicas": 0
  },
  "mappings": {
    "doc": {
      "properties": {
        "body": {"type": "string"}
      }
    }
  }
}$0
#+END_SRC

* Index docs

#+BEGIN_SRC es :tangle yes
POST /$2/doc/1
{"body": "foo"}

POST /$2/_refresh
{}
#+END_SRC

* Query

#+BEGIN_SRC es :tangle yes
POST /$2/_search?pretty
{
  "query": {
    "match_all": {}
  }
}
#+END_SRC
